<?xml version="1.0" ?>
<project name="Texture Model" >
	
	<assets>
		<attributes>
			<attribute type="COLOR" name="shininess" data="FLOAT" value=128/>
			<!-- cross-hatching parameters -->
			<attribute type="COLOR" name="far" data="FLOAT" value=8.0/>
			<!-- pixel parameters-->
			<attribute type="COLOR" name="pixel_height" data="FLOAT" value=10.0/>
			<attribute type="COLOR" name="pixel_width" data="FLOAT" value=10.0/>
			<attribute type="COLOR" name="screenSize_height" data="FLOAT" value=800.0/>
			<attribute type="COLOR" name="screenSize_width" data="FLOAT" value=1024.0/>
		</attributes>
		<scenes>
			<scene name="Sphere" param="UNITIZE">
				<file name="models/Sphere.obj"/>
			</scene>
			<scene name="geom" param="UNITIZE">
				<file name="models/geom.obj"/>
			</scene>
			<scene name="obj" param="UNITIZE">
				<file name="models/obj.obj"/>
			</scene>
		</scenes>
		
		<viewports>
			<viewport name="MainViewport">
				<CLEAR_COLOR r="0.0" g="0.0" b="0.0" />
			</viewport>
		</viewports>
		
		<cameras>
			<camera name="MainCamera" >
				<viewport name="MainViewport" />
				<POSITION x=0 y=0 z=3 />
				<VIEW x=0 y=0 z=-1.0 />
				<NEAR value=0.01/>
			</camera>
		</cameras>
		
		<lights>
			<light name="Sun">
				<DIRECTION x=-2 y=-2 z=-2 />
			</light>
		</lights>
		
		<materialLibs>
			<materialLib filename="textureModel.mlib" />
		</materialLibs>
	</assets>
	
	<pipelines>
		<pipeline name="pen" >
			<pass class="default" name="pen" >
				<scenes>
					<scene name="Sphere" />
				</scenes>
				<camera name="MainCamera" />
				<lights>
					<light name="Sun" />
				</lights>
				<materialMaps>
					<map fromMaterial="*" toMaterial="pen" toLibrary="Texture" />
				</materialMaps>
			</pass>
		</pipeline>

		<pipeline name="tech-Ilustration" >
			<pass class="default" name="tech-Ilustration" >
				<scenes>
					<scene name="obj" />
				</scenes>
				<camera name="MainCamera" />
				<lights>
					<light name="Sun" />
				</lights>
				<materialMaps>
					<map fromMaterial="*" toMaterial="tech-Ilustration" toLibrary="Texture" />
				</materialMaps>
			</pass>
		</pipeline>

		<pipeline name="textures-pixel" >
			<pass class="default" name="pixel" >
				<scenes>
					<scene name="Sphere" />
				</scenes>
				<camera name="MainCamera" />
				<lights>
					<light name="Sun" />
				</lights>
				<materialMaps>
					<map fromMaterial="*" toMaterial="pixel" toLibrary="Texture" />
				</materialMaps>
				
			</pass>
		</pipeline>
		<pipeline name="textures-cross-hatching" >
			<pass class="default" name="chatching" >
				<scenes>
					<scene name="geom" />
				</scenes>
				<camera name="MainCamera" />
				<lights>
					<light name="Sun" />
				</lights>
				<materialMaps>
					<map fromMaterial="*" toMaterial="cross-hatching" toLibrary="Texture" />
				</materialMaps>
			</pass>
		</pipeline>
		<pipeline name="textures-cross-hatching1" >
			<pass class="default" name="chatching1" >
				<scenes>
					<scene name="Sphere" />
				</scenes>
				<camera name="MainCamera" />
				<lights>
					<light name="Sun" />
				</lights>
				<materialMaps>
					<map fromMaterial="*" toMaterial="cross-hatching" toLibrary="Texture" />
				</materialMaps>
			</pass>
		</pipeline>
		<pipeline name="textures-pixel1" >
			<pass class="default" name="pixel1" >
				<scenes>
					<scene name="geom" />
				</scenes>
				<camera name="MainCamera" />
				<lights>
					<light name="Sun" />
				</lights>
				<materialMaps>
					<map fromMaterial="*" toMaterial="pixel" toLibrary="Texture" />
				</materialMaps>
			</pass>
		</pipeline>
		<pipeline name="edges" >
			<pass class="default" name="edges1" >
				<scenes>
					<scene name="Sphere" />
				</scenes>
				<camera name="MainCamera" />
				<lights>
					<light name="Sun" />
				</lights>
				<materialMaps>
					<map fromMaterial="*" toMaterial="edges1" toLibrary="Texture" />
				</materialMaps>
			</pass>
		</pipeline>
	</pipelines>

	<interface>
		<window label="settings" >
			<pipelineList label="effect" />
			<var label="far" type="COLOR" context="Texture::cross-hatching" 
					component="far" def="min=1 max=12 step=1" />
			<var label="pixel_height" type="COLOR" context="Texture::pixel" 
					component="pixel_height" def="min=1 max=30 step=0.5" />		
			<var label="pixel_width" type="COLOR" context="Texture::pixel" 
					component="pixel_width" def="min=1 max=30 step=0.5" />
			<var label="shininess" type="COLOR" context="Texture::pixel" 
					component="shininess" def="min=0 max=128 step=0.5" />
			<var label="shininess" type="COLOR" context="Texture::cross-hatching" 
					component="shininess" def="min=0 max=128 step=0.5" />		
		</window>
	</interface>

</project>